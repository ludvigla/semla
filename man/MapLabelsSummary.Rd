% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization_spatial_stats.R
\name{MapLabelsSummary}
\alias{MapLabelsSummary}
\title{Map features spatially and add a summary plot next to it}
\usage{
MapLabelsSummary(
  object,
  column_name,
  bar_display = "percent",
  bar_width = 1.2,
  bar_label_size = 3,
  image_use = NULL,
  coords_use = "raw",
  crop_area = NULL,
  pt_size = 1,
  pt_alpha = 1,
  pt_stroke = 0,
  hide_legend = TRUE,
  section_number = NULL,
  label_by = NULL,
  ncol = NULL,
  colors = NULL,
  override_plot_dims = FALSE,
  return_plot_list = FALSE,
  drop_na = FALSE,
  ...
)
}
\arguments{
\item{object}{An object}

\item{column_name}{A character specifying a meta data column holding the categorical
feature vector.}

\item{bar_display}{a character vector of length 1 specifying one of "percent" or "count" for the bar plot to display. Default set to "percent".}

\item{bar_width}{a numeric value specifying width of the bar plot. Default set to 1.2.}

\item{bar_label_size}{a numeric value specifying text size of the bar plot labels. Default set to 3.}

\item{image_use}{A character specifying image type to use.}

\item{coords_use}{A character specifying coordinate type to use.}

\item{crop_area}{A numeric vector of length 4 specifying a rectangular area to crop
the plots by. These numbers should be within 0-1. The x-axis is goes from left=0 to
right=1 and the y axis is goes from top=0 to bottom=1. The order of the values are
specified as follows: \code{crop_area = c(left, top, right, bottom)}. The crop area
will be used on all tissue sections and cannot be set for each section individually.
using crop areas of different sizes on different sections can lead to unwanted side
effects as the point sizes will remain constant. In this case it is better to generate
separate plots for different tissue sections.}

\item{pt_size}{A numeric value specifying the point size passed to \code{geom_point}}

\item{pt_alpha}{A numeric value between 0 and 1 specifying the point opacity passed
to \code{geom_point}. A value of 0 will make the points completely transparent
and a value of 1 will make the points completely opaque.}

\item{pt_stroke}{A numeric specifying the point stroke width}

\item{hide_legend}{logical specifying whether to hide the label legend for the spatial plot. Set to (\code{TRUE}) by default.}

\item{section_number}{An integer select a tissue section number to subset data by}

\item{label_by}{A character specifying a column name in \code{object} with
labels that can be used to provide a title for each subplot. This column should have
1 label per tissue section. This can be useful when you need to provide more detailed
information about your tissue sections.}

\item{ncol}{An integer value specifying the number of columns in the output patchwork.}

\item{colors}{A character vector of colors to use for the color scale. The number of
colors should match the number of labels present.}

\item{override_plot_dims}{A logical specifying whether the image dimensions should
be used to define the plot area. Setting \code{override_plot_dims} can be useful
in situations where the tissue section only covers a small fraction of the capture
area, which will create a lot of white space in the plots. The same effect can be
achieved with the \code{crop_area} but the crop area is instead determined directly
from the data.}

\item{return_plot_list}{logical specifying whether the plots should be return as a list of
\code{ggplot} objects. If \code{return_plot_list = FALSE} (default), the plots will be arranged
into a \code{patchwork}}

\item{drop_na}{A logical specifying if NA values should be dropped}

\item{...}{Arguments passed to other methods}
}
\value{
a `patchwork` object
}
\description{
This function is a wrapped for \code{\link{MapLabels}} which adds a
stacked bar plot showing the sample's proportions of each category in
the selected column next to the spatial feature plot.
}
\details{
Note that currently, only 1 label can be selected
}
\examples{
# Prepare Seurat object
se <- readRDS(system.file("extdata/mousebrain",
                          "se_mbrain",
                           package = "semla"))

se <- se |>
  NormalizeData()  |>
  ScaleData() |>
  FindVariableFeatures() |>
  RunPCA() |>
  FindNeighbors(reduction = "pca", dims = 1:10) |>
  FindClusters(resolution = 0.2)

# Plot clusters
MapLabelsSummary(se, column_name = "seurat_clusters", override_plot_dims = TRUE)


}
\seealso{
Other spatial-visualization-methods: 
\code{\link{AnglePlot}()},
\code{\link{FeatureViewer}()},
\code{\link{ImagePlot}()},
\code{\link{MapFeatures}()},
\code{\link{MapFeaturesSummary}()},
\code{\link{MapLabels}()},
\code{\link{MapMultipleFeatures}()}
}
\author{
Lovisa Franzen
}
\concept{spatial-visualization-methods}
