% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_data.R
\name{ReadVisiumData}
\alias{ReadVisiumData}
\title{Read spaceranger output files}
\usage{
ReadVisiumData(
  infoTable,
  assay = "Spatial",
  remove_spots_outside_HE = FALSE,
  remove_spots_outside_tissue = TRUE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{infoTable}{A \code{data.frame} or \code{tbl} with paths to spaceranger output files}

\item{assay}{Assay name (default = "Spatial")}

\item{remove_spots_outside_HE}{Should spots outside the H&E be removed? This option
can be useful for CytAssist data when the H&E image only cover a smaller part of the
entire tissue section.}

\item{remove_spots_outside_tissue}{Should spots outside the tissue be removed?}

\item{verbose}{Print messages}

\item{...}{Parameters passed to \code{\link{CreateSeuratObject}}}
}
\value{
A \code{\link{Seurat}} object with additional spatial information stored in
a \code{Staffli} object
}
\description{
This function serves as a wrapper for \code{\link{LoadAndMergeMatrices}} and
\code{\link{LoadSpatialCoordinates}} to load spaceranger output files and create
a Seurat object. The spatial information, i.e. images and spot coordinates, are
stored inside the tools slot of the \code{Seurat} object in \code{Staffli} object.
}
\details{
\code{ReadVisiumData} takes a \code{data.frame} like table as input that should hold
certain spaceranger output file paths. The table should consist of four columns:
"samples", "imgs", "spotfiles" and "json".

\itemize{
   \item{"samples" : file paths to expression matrices, e.g. \code{filtered_bc_matrix.h5}}
   \item{"imgs" : file paths to images, e.g. \code{tissue_hires_image.jpg}}
   \item{"spotfiles" : file paths to spot coordinate CSV files \code{tissue_positions_list.csv}}
   \item{"json" : file paths to scale factor JSON files, e.g. \code{scalefactors_json.json}. 
   It is also possible to provide custom scale factors (more info below).}
}
}
\section{Custom scale factors}{

You can provide an additional column named 'scalefactor' with custom scale factor values.
The values should be between 0 to 1, where a 1 would correspond to the original H&E image
used as input for spaceranger. For instance, if your image was scaled from a height of 30,000
pixels to a height of 3,000 pixels (with the same aspect ratio), the scalefactor would be 0.1.
}

\section{Load data outside tissue section}{

Sometimes it can be useful to load data for all spots in a 10x Visium dataset, if you
need to explore transcripts captured outside of the tissue. In this case, you can
provide paths to the \code{raw_feature_bc_matrix.h5} files in the spaceranger output folders
and set \code{remove_spots_outside_tissue = FALSE}.
}

\section{Filter data}{

If you want to filter out spots and features, you can pass the \code{min.cells} and
\code{min.features} parameters (see \code{\link{CreateSeuratObject}} for more details);
however, it is recommended to use the \code{\link{SubsetSTData}} function for filtering
after the object has been created.
}

\section{Additional annotations}{

You can add a column named 'annotation_files' with paths to CSV files containing 
annotations. These files should have the same structure as the CSV the files exported 
by Loupe Browser. One column with the barcode IDs and one column with the annotation labels.
The annotations will be added to the \code{meta.data} slot of the returned \code{\link{Seurat}} object.
}

\examples{
# Assemble spaceranger output files
samples <-
  Sys.glob(paths = paste0(system.file("extdata", package = "semla"),
                          "/*/filtered_feature_bc_matrix.h5"))
imgs <-
  Sys.glob(paths = paste0(system.file("extdata", package = "semla"),
                          "/*/spatial/tissue_lowres_image.jpg"))
spotfiles <-
  Sys.glob(paths = paste0(system.file("extdata", package = "semla"),
                          "/*/spatial/tissue_positions_list.csv"))
json <-
  Sys.glob(paths = paste0(system.file("extdata", package = "semla"),
                          "/*/spatial/scalefactors_json.json"))

# Create a tibble/data.frame with file paths
library(tibble)
infoTable <- tibble(samples, imgs, spotfiles, json, 
                    sample_id = c("mousebrain", "mousecolon"))

# Create Seurat object
se <- ReadVisiumData(infoTable = infoTable)
se

# Add additional annotations from CSV files
annotation_file <- 
  Sys.glob(paths = paste0(system.file("extdata", package = "semla"),
                          "/*/galt_spots.csv"))
annotation_files <- c(NA_character_, annotation_file)

# Create a tibble/data.frame with file paths
infoTable <- tibble(samples, imgs, spotfiles, json, 
                    sample_id = c("mousebrain", "mousecolon"), annotation_files)

se <- ReadVisiumData(infoTable)

}
\seealso{
Other pre-process: 
\code{\link{CreateMultiModalObject}()},
\code{\link{LoadAndMergeMatrices}()},
\code{\link{LoadAnnotationCSV}()},
\code{\link{LoadImageInfo}()},
\code{\link{LoadImages}()},
\code{\link{LoadScaleFactors}()},
\code{\link{LoadSpatialCoordinates}()},
\code{\link{UpdateImageInfo}()}
}
\concept{pre-process}
